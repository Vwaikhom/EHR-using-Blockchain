<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Medical History</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css"
    integrity="sha384-r4NyP46KrjDleawBgD5tp8Y7UzmLA05oM1iAEQ17CSuDqnUK2+k9luXQOfXJCJ4I" crossorigin="anonymous"/>
    <script src="https://cdn.jsdelivr.net/npm/web3@1.2.8/dist/web3.js"></script>
</head>
<body class="d-flex flex-column vh-100">
    <script>

        const Record = [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "namedecl",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symboldecl",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        }
      ],
      "name": "medical_record",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_previous",
          "type": "string"
        }
      ],
      "name": "previous_dates",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        }
      ],
      "name": "get_previous_dates",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_applicable",
          "type": "string"
        },
        {
          "internalType": "uint64",
          "name": "_policy_no",
          "type": "uint64"
        },
        {
          "internalType": "string",
          "name": "_insurer",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_policy_type",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_policy_limit",
          "type": "string"
        }
      ],
      "name": "insurance_details",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        }
      ],
      "name": "get_insurance",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_complaints",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_duration",
          "type": "string"
        }
      ],
      "name": "present_illness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        }
      ],
      "name": "get_present_illness",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_family_history",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_personal_history",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_drug_history",
          "type": "string"
        }
      ],
      "name": "past_illness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        }
      ],
      "name": "get_past_illness",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_diag_summary",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_prescription",
          "type": "string"
        }
      ],
      "name": "func_diagnosis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        }
      ],
      "name": "get_func_diagnosis",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_treatment",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_date_treatment",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_doctor_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_hospital_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_discharge",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_follow_up",
          "type": "string"
        }
      ],
      "name": "treatment_summary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        }
      ],
      "name": "get_treatment_summary",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ]

  let account;

  window.addEventListener("load", async () => {
    if (typeof window.ethereum !== "undefined") {
      console.log("MetaMask is installed.");
    }

    // Modern DApp browsers
    if (window.ethereum) {
      window.web3 = new Web3(ethereum);

      // To prevent the page reloading when the MetaMask network changes
      ethereum.autoRefreshOnNetworkChange = false;

      // To Capture the account details from MetaMask
      const accounts = await ethereum.enable();
      account = accounts[0];
  //console.log(account);
    }

    // Non-DApp browsers
    else {
      console.log("Please install MetaMask");
    }
  });

    const contractaddress = "0x7896aF6733e0C6278061fc7Ec97069c08c58A08b";

    async function get_date() {
      const myContract = new web3.eth.Contract(Record,contractaddress, {from: account, gasPrice: '5000000', gas: '500000'});
      const idd = document.getElementById("patient-id").value;
      const result = await myContract.methods.get_previous_dates(idd).call();
      console.log(result);
        
      document.getElementById("get_dates").innerHTML = result;
    }

    async function get_details() {
      const myContract = new web3.eth.Contract(Record,contractaddress, {from:account, gasPrice: '5000000', gas: '500000'});
      const idt = document.getElementById("record-id").value;
      const insuranceResult = await myContract.methods.get_insurance(idt).call();
      document.getElementById("appl").innerHTML = insuranceResult[0];
      document.getElementById("policy").innerHTML = insuranceResult[1];
      document.getElementById("insu").innerHTML = insuranceResult[2];
      document.getElementById("type").innerHTML = insuranceResult[3];
      document.getElementById("lim").innerHTML = insuranceResult[4];
      
      const presentIllnessResult = await myContract.methods.get_present_illness(idt).call();
      document.getElementById("disease").innerHTML = presentIllnessResult[0];
      document.getElementById("com").innerHTML = presentIllnessResult[1];
      document.getElementById("duration").innerHTML = presentIllnessResult[2];

      const pastIllnessResult = await myContract.methods.get_past_illness(idt).call();
      document.getElementById("get_fam").innerHTML = pastIllnessResult[0];
      document.getElementById("get_chronic").innerHTML = pastIllnessResult[1];
      document.getElementById("get_drug").innerHTML = pastIllnessResult[2];

      const provisionalTreatmentResult = await myContract.methods.get_func_diagnosis(idt).call();
      document.getElementById("get_diag").innerHTML = provisionalTreatmentResult[0];
      document.getElementById("get_pre").innerHTML = provisionalTreatmentResult[1];

      const treatmentResult = await myContract.methods.get_treatment_summary(idt).call();
      document.getElementById("treat").innerHTML = treatmentResult[0];
      document.getElementById("get_date").innerHTML = treatmentResult[1];
      document.getElementById("doc_id").innerHTML = treatmentResult[2];
      document.getElementById("hospital_id").innerHTML = treatmentResult[3];
      document.getElementById("get_dis").innerHTML = treatmentResult[4];
    }
    </script>

    <nav class="navbar sticky-top navbar-expand-lg navbar-dark bg-dark">
      <div class="container-fluid">
        <a class="navbar-brand" href="#">Blockchain EHR</a>
        <button
          class="navbar-toggler"
          type="button"
          data-toggle="collapse"
          data-target="#navbarNavAltMarkup"
          aria-controls="navbarNavAltMarkup"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
          <div class="navbar-nav">
            <a class="nav-link" href="/">Home</a>
            <a class="nav-link" href="/view_history">View Patient Medical History</a>
            <a class="nav-link" href="/checkup">Store Checkup Info</a>
          </div>
          <div class="navbar-nav ml-auto"></div>
        </div>
      </div>
    </nav>
    <main class="container mt-5">
      <div class="container d-flex justify-content-center align-items-center mt-5">
        <div class="row">
          <div class="card mb-3">
              <div class="card-body"> 
                <div class="container d-flex justify-content-center align-items-center"><h1>Patient Medical Record</h1></div>
                <div class="input-group mb-3">
                    <button class="btn btn-outline-secondary" type="button" value="Get Details" onclick="get_date()">Get Date</button>
                    <input type="number" class="form-control" id = "patient-id"placeholder="patient ID" aria-label="Example text with button addon" aria-describedby="button-addon1">
                </div>
                <h5>Last Updated date for current patient:</h3>
                <table class="table-success table-bordered" style="width:25%">
                    <tr>
                        <td>Date: </td>
                        <td><div id="get_dates"></div></td>
                    </tr>
                  </table>
                  <br>
                  <h5>Enter the record ID (Patient ID appended by latest date):</h5>
                  <div class="input-group mb-3">
                    <button class="btn btn-outline-secondary" type="button" value="Get Details" onclick="get_details()">Get Details</button>
                    <input type="number" class="form-control" id = "record-id"placeholder="Record ID" aria-label="Example text with button addon" aria-describedby="button-addon1">
                </div>
                <h5>Insurance Details</h5>
                  <table>
                    <tr>
                        <td>Is Insurance applicable?:</td>
                        <td><div id="appl"></div></td>
                    </tr>
                    <tr>
                      <td>Policy Number:</td>
                      <td><div id="policy"></div></td>
                    </tr>
                    <tr>
                      <td>Insurer: </td>
                      <td><div id="insu"></div></td>
                    </tr>
                    <tr>
                      <td>Policy type:</td>
                      <td><div id="type"></div></td>
                    </tr>
                    <tr>
                      <td>Policy Limit:</td>
                      <td><div id="lim"></div></td>
                    </tr>
                </table>
                <br>

                <h5>Present Illness</h5>
                <table>
                  <tr>
                    <td>Ailments:</td>
                    <td><div id="disease"></div></td>
                  </tr>
                  <tr>
                    <td>Complaints:</td>
                    <td><div id="com"></div></td>
                  </tr>
                  <tr>
                    <td>Duration:</td>
                    <td><div id="duration"></div></td>
                  </tr>
                </table>
                <br>
                <h5>Past Illness</h5>
                <table>
                  <tr>
                    <td>Genetic:</td>
                    <td><div id="get_fam"></div></td>
                  </tr>
                  <tr>
                    <td>Chronic illness:</td>
                    <td><div id="get_chronic"></div></td>
                  </tr>
                  <tr>
                    <td>Drug History:</td>
                    <td><div id="get_drug"></div></td>
                  </tr>
                </table>
                <br>
                <h5>Provisional Diagnosis Details:</h5>
                <table>
                  <tr>
                    <td>Diagnosis Summary:</td>
                    <td><div id="get_diag"></div></td>
                  </tr>
                  <tr>
                    <td>Prescription:</td>
                    <td><div id="get_pre"></div></td>
                  </tr>
                </table>
                <br>
                <h5>Treatment Summary:</h5>
                <table>
                  <tr> 
                    <td>Treatment:</td>
                    <td><div id="treat"></div></td>
                  </tr>
                  <tr>
                    <td>Date:</td>
                    <td><div id="get_date"></div></td>
                  </tr>
                  <tr>
                    <td>Treated by Doctor ID:</td>
                    <td><div id="doc_id"></div></td>
                  </tr>
                  <tr>
                    <td>Treated at Hospital ID:</td>
                    <td><div id="hospital_id"></div></td>
                  </tr>
                  <tr>
                    <td>Discharge date:</td>
                    <td><div id="get_dis"></div></td>
                  </tr>
                </table>
              </div>
          </div>
        </div>
      </div>
    </main>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
    integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/js/bootstrap.min.js"
    integrity="sha384-oesi62hOLfzrys4LxRF63OJCXdXDipiYWBnvTl9Y9/TRlw5xlKIEHpNyvvDShgf/" crossorigin="anonymous"></script>
</body>
</html>