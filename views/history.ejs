<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Record</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css"
    integrity="sha384-r4NyP46KrjDleawBgD5tp8Y7UzmLA05oM1iAEQ17CSuDqnUK2+k9luXQOfXJCJ4I" crossorigin="anonymous"/>
    <script src="https://cdn.jsdelivr.net/npm/web3@1.2.8/dist/web3.js"></script>
</head>
<body class="d-flex flex-column vh-100">
    <script>
    const Record = [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "namedecl",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symboldecl",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        }
      ],
      "name": "medical_record",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_previous",
          "type": "string"
        }
      ],
      "name": "previous_dates",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        }
      ],
      "name": "get_previous_dates",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_applicable",
          "type": "string"
        },
        {
          "internalType": "uint64",
          "name": "_policy_no",
          "type": "uint64"
        },
        {
          "internalType": "string",
          "name": "_insurer",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_policy_type",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_policy_limit",
          "type": "string"
        }
      ],
      "name": "insurance_details",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        }
      ],
      "name": "get_insurance",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_complaints",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_duration",
          "type": "string"
        }
      ],
      "name": "present_illness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        }
      ],
      "name": "get_present_illness",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_family_history",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_personal_history",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_drug_history",
          "type": "string"
        }
      ],
      "name": "past_illness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        }
      ],
      "name": "get_past_illness",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_diag_summary",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_prescription",
          "type": "string"
        }
      ],
      "name": "func_diagnosis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        }
      ],
      "name": "get_func_diagnosis",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_treatment",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_date_treatment",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_doctor_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_hospital_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_discharge",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_follow_up",
          "type": "string"
        }
      ],
      "name": "treatment_summary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "patient_id",
          "type": "uint256"
        }
      ],
      "name": "get_treatment_summary",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ];

  let account;
  window.addEventListener("load", async () => {
    if (typeof window.ethereum !== "undefined") {
      console.log("MetaMask is installed.");
    }

    // Modern DApp browsers
    if (window.ethereum) {
      window.web3 = new Web3(ethereum);

      // To prevent the page reloading when the MetaMask network changes
      ethereum.autoRefreshOnNetworkChange = false;

      // To Capture the account details from MetaMask
      const accounts = await ethereum.enable();
      account = accounts[0];
  //console.log(account);
    }

    // Non-DApp browsers
    else {
      console.log("Please install MetaMask");
    }
  });

  const contractaddress = "0x7896aF6733e0C6278061fc7Ec97069c08c58A08b";

  async function prev_details() {
    const myContract = new web3.eth.Contract(Record,contractaddress,{from: account, gasPrice: '5000000', gas: '5000000'});
    const id = document.getElementById("id0").value;
    const date = document.getElementById("dates1").value;
    const result = await myContract.methods.previous_dates(id,date).send();

    if(result){
        console.log(result);
        //document.getElementById("result0").innerHTML = result;
    }
  }

  async function insu_details() {
    const myContract = new web3.eth.Contract(Record,contractaddress, {from: account, gasPrice: '5000000', gas: '5000000'});
    const id = document.getElementById("id1").value;
	const ids1 = document.getElementById("appl").value;
    const ids2 = document.getElementById("pono").value;
	const ids3 = document.getElementById("ins").value;
	const ids4 = document.getElementById("type").value;
	const ids5 = document.getElementById("lim").value;
    const iid = document.getElementById("id1").value;
	const pd1 = document.getElementById("com").value;
	const pd2 = document.getElementById("dur").value;
    const prid = document.getElementById("id2").value;
	const pad1 = document.getElementById("fam").value;
	const pad2 = document.getElementById("per").value;
	const pad3 = document.getElementById("drug").value;
    const pid = document.getElementById("id3").value;
	const dd1 = document.getElementById("diag").value;
	const dd2 = document.getElementById("pre").value;
    const dpid = document.getElementById("id4").value;
	const td1 = document.getElementById("treat").value;
	const td2 = document.getElementById("date").value;
	const td3 = document.getElementById("doc").value;
	const td4 = document.getElementById("hos").value;
	const td5 = document.getElementById("dis").value;
	const td6 = document.getElementById("fol").value;
    const tpid = document.getElementById("id5").value;
					
	const medicalResult = await myContract.methods.medical_record(id).send();
    const insuranceResult = await myContract.methods.insurance_details(iid,ids1,ids2,ids3,ids4,ids5).send();
    const preIllResult = await myContract.methods.present_illness(prid,pd1,pd2).send();
    const pastillResult = await myContract.methods.past_illness(pid,pad1,pad2,pad3).send();
    const diagResult = await myContract.methods.func_diagnosis(dpid,dd1,dd2).send();
    const treatResult = await myContract.methods.treatment_summary(tpid,td1,td2,td3,td4,td5,td6).send();
  }
  
</script>
    <nav class="navbar sticky-top navbar-expand-lg navbar-dark bg-dark">
      <div class="container-fluid">
        <a class="navbar-brand" href="#">Blockchain EHR</a>
        <button
          class="navbar-toggler"
          type="button"
          data-toggle="collapse"
          data-target="#navbarNavAltMarkup"
          aria-controls="navbarNavAltMarkup"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
          <div class="navbar-nav">
            <a class="nav-link" href="/">Home</a>
            <a class="nav-link" href="/view_history">View Patient Medical History</a>
            <a class="nav-link" href="/checkup">Store Checkup Info</a>
          </div>
          <div class="navbar-nav ml-auto"></div>
        </div>
      </div>
    </nav>

    <main class="container mt-5">
      <div class="container d-flex justify-content-center align-items-center mt-5">
        <div class="row">
          <div class="card mb-3">
              <div class="card-body"> 
      <h2>Previous dates of medical record updated</h2>
      <form>
      <table style="width:25%"> 
      <tr>
        <td>Enter Patient Id:</td>
        <td><input type="text" id="id0" name="id0"></td>
      </tr>
      <tr>
        <td> Dates:</td>
        <td><input type="text" id="dates1" name="dates1"></td>
      </tr>
      <tr>			
        <td><input type="button" onclick="prev_details()" value="Submit"></td>
      </tr>
      </table>
      
    </form>
    <br>
    <h2>Insurance Details</h2>
      <form>
      <table style="width:25%"> 
        <tr>
            <td>Enter Record Id:</td>
            <td><input type="text" id="id1" name="id1"></td>
        </tr>
        <tr>
            <td>Is Insurance applicable? (yes/no): </td>
            <td><input type="text" id="appl" name="appl"></td>
        </tr>
        <tr>
            <td>Policy Number:</td>
            <td><input type="text" id="pono" name="pono"></td>
        </tr>  
        <tr>
            <td>Insurer:</td>
            <td><input type="text" id="ins" name="ins"></td>
        </tr>
        <tr>
            <td>Policy Type:</td>
            <td><input type="text" id="type" name="type"></td>
        </tr>
        <tr>
            <td>Policy Limit:</td>
            <td><input type="text" id="lim" name="lim"></td>
        </tr>         
      </table>
    <br>
    <h2> Present Illness Details</h2>
      <form>
      <table style="width:25%"> 
        <tr>
            <td>Enter Record Id:</td>
            <td><input type="text" id="id2" name="id2"></td>
        </tr>
        <tr>
            <td> Complaints:</td>
            <td><input type="text" id="com" name="com"></td>
        </tr>
        <tr>
            <td>Duration:</td>
            <td><input type="text" id="dur" name="dur"></td>
        </tr>
      </table>
      <br>
    <h2> Past Illness Details</h2>
      <form>
      <table style="width:25%"> 
        <tr>
            <td>Enter Record Id:</td>
            <td><input type="text" id="id3" name="id3"></td>
        </tr>
        <tr>
            <td>Family History:</td>
            <td><input type="text" id="fam" name="fam"></td>
        </tr>
        <tr>
            <td>Personal History:</td>
            <td><input type="text" id="per" name="per"></td>
        </tr>
        <tr>
            <td>Drug History:</td>
            <td><input type="text" id="drug" name="drug"></td>
        </tr>       
      </table>
      <br>
    <h2> Provisional Diagnosis Details</h2>
      <form>
      <table style="width:25%"> 
        <tr>
            <td>Enter Record Id:</td>
            <td><input type="text" id="id4" name="id4"></td>
        </tr>
        <tr>
            <td>Diagnosis Summary:</td>
            <td><input type="text" id="diag" name="diag"></td>
        </tr>
        <tr>
            <td>Prescription:</td>
            <td><input type="text" id="pre" name="pre"></td>
        </tr>      
      </table>
      <br>
    <h2> Treatment Summary</h2>
      <form>
      <table style="width:25%"> 
        <tr>
            <td>Enter Record Id:</td>
            <td><input type="text" id="id5" name="id5"></td>
        </tr>
        <tr>
            <td>Treatment:</td>
            <td><input type="text" id="treat" name="treat"></td>
        </tr>
        <tr>
            <td>Date of Treatment:</td>
            <td><input type="text" id="date" name="date"></td>
        </tr>      
        <tr>
            <td>Treated by Doctor(ID):</td>
            <td><input type="number" id="doc" name="doc"></td>
        </tr>      
        <tr>
            <td>Treated at Hospital(ID):</td>
            <td><input type="number" id="hos" name="hos"></td>
        </tr>      
        <tr>
            <td>Discharge:</td>
            <td><input type="text" id="dis" name="dis"></td>
        </tr>      
        <tr>
            <td>Follow Up:</td>
            <td><input type="text" id="fol" name="fol"></td>
        </tr>      
      </table>
      </form>
          
        <form>
      <table style="width:25%"> 
           <tr>
        <td><input type="button" onclick="insu_details()" value="Submit"></td>
        </tr>
      </table>
      <br>
      <h4> Transaction Id: <a href=""><div id="result"></div></a></h4> 
    </form>
    </div>
    </div>
    </div>
    </div>
    </main>
    
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/js/bootstrap.min.js"
integrity="sha384-oesi62hOLfzrys4LxRF63OJCXdXDipiYWBnvTl9Y9/TRlw5xlKIEHpNyvvDShgf/" crossorigin="anonymous"></script>
</body>
</html>